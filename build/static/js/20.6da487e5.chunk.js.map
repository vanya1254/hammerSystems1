{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","views/app-views/main/catalog/products/index.js","views/app-views/main/catalog/categories/index.js","views/app-views/main/catalog/collections/index.js","views/app-views/main/catalog/combo/index.js","views/app-views/main/catalog/index.js"],"names":["renderAvatar","props","_jsx","Avatar","_objectSpread","className","concat","type","children","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","PlusCircleOutlined","ref","React","AntdIcon","PlusCircleOutlinedSvg","RefIcon","Option","Select","categories","Products","history","useHistory","list","setList","useState","ProductsListData","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","tableColumns","title","dataIndex","render","_","record","image","sorter","a","b","utils","antdTableSorter","price","NumberFormat","displayType","value","Math","round","toFixed","prefix","thousandSeparator","stock","Flex","alignItems","stockCount","_Fragment","Badge","status","EllipsisOutlined","rowSelection","onChange","key","rows","Card","justifyContent","mobileFlex","Input","placeholder","SearchOutlined","e","currentTarget","searchArray","data","wildCardSearch","onSearch","defaultValue","style","minWidth","filterArray","map","elm","Button","addProduct","push","block","Table","columns","dataSource","rowKey","preserveSelectedRowKeys","Categories","Collections","Combo","Catalog","_ref","match","Switch","Redirect","exact","from","url","to","Route","path","component"],"mappings":"qIAIA,MAAMA,EAAeC,GACbC,cAACC,IAAMC,wBAAA,GAAKH,GAAK,IAAEI,UAAS,cAAAC,OAAgBL,EAAMM,MAAOC,SAAEP,EAAMQ,QAgC1DC,IA7BaT,IAC3B,MAAM,KAAEU,EAAI,OAAEC,EAAM,SAAEC,EAAQ,GAAEC,EAAE,KAAEP,EAAI,IAAEQ,EAAG,KAAEC,EAAI,KAAEC,EAAI,MAAEC,EAAK,IAAEC,EAAG,KAAEV,EAAI,YAAEW,GAAgBnB,EAC7F,OACCoB,eAAA,OAAKhB,UAAU,0CAAyCG,SAAA,CACtDR,EAAa,CAACgB,OAAMD,MAAKR,OAAMU,OAAMC,QAAOC,MAAKV,SAClDY,eAAA,OAAKhB,UAAU,OAAMG,SAAA,CACpBa,eAAA,OAAAb,SAAA,CAEEY,EACAlB,cAAA,OAAKoB,QAASA,IAAMF,EAAY,CAACT,OAAME,WAAUE,MAAKD,OAAMT,UAAU,+BAA8BG,SAAEG,IAEtGT,cAAA,OAAKG,UAAU,qBAAoBG,SAAEG,IAEtCT,cAAA,QAAAM,SAAOI,OAERV,cAAA,OAAKG,UAAU,oCAAmCG,SAAEK,SAEhD,C,+/CCvBOU,EADU,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8LAAiM,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oLAAwL,KAAQ,cAAe,MAAS,Y,QCKtlBA,EAAqB,SAA4BtB,EAAOuB,GAC1D,OAAoBC,gBAAoBC,IAAUtB,YAAcA,YAAc,CAAC,EAAGH,GAAQ,CAAC,EAAG,CAC5FuB,IAAKA,EACLR,KAAMW,IAEV,EAKeC,MAJYH,aAAiBF,G,0CCE5C,MAAM,OAAEM,GAAWC,IA8BbC,EAAa,CAAC,SAAU,OAAQ,QAAS,UAAW,WAiK3CC,MA/JEA,KACf,IAAIC,EAAUC,cACd,MAAOC,EAAMC,GAAWC,mBAASC,IAC1BC,EAAcC,GAAmBH,mBAAS,KAC1CI,EAAiBC,GAAsBL,mBAAS,IAMjDM,EAAe,CACnB,CACEC,MAAO,KACPC,UAAW,MAEb,CACED,MAAO,UACPC,UAAW,OACXC,OAAQA,CAACC,EAAGC,IACV9C,cAAA,OAAKG,UAAU,SAAQG,SACrBN,cAACQ,IAAY,CACXO,KAAM,GACNV,KAAK,SACLQ,IAAKiC,EAAOC,MACZtC,KAAMqC,EAAOrC,SAInBuC,OAAQA,CAACC,EAAGC,IAAMC,IAAMC,gBAAgBH,EAAGC,EAAG,SAEhD,CACER,MAAO,WACPC,UAAW,WACXK,OAAQA,CAACC,EAAGC,IAAMC,IAAMC,gBAAgBH,EAAGC,EAAG,aAEhD,CACER,MAAO,QACPC,UAAW,QACXC,OAASS,GACPrD,cAAA,OAAAM,SACEN,cAACsD,IAAY,CACXC,YAAa,OACbC,OAAQC,KAAKC,MAAc,IAARL,GAAe,KAAKM,QAAQ,GAC/CC,OAAQ,IACRC,mBAAmB,MAIzBb,OAAQA,CAACC,EAAGC,IAAMC,IAAMC,gBAAgBH,EAAGC,EAAG,UAEhD,CACER,MAAO,QACPC,UAAW,QACXK,OAAQA,CAACC,EAAGC,IAAMC,IAAMC,gBAAgBH,EAAGC,EAAG,UAEhD,CACER,MAAO,SACPC,UAAW,QACXC,OAASkB,IACP9D,qBAAC+D,IAAI,CAACC,WAAW,SAAQ1D,UAzFT2D,EAyF0BH,EAxF5CG,GAAc,GAEd9C,eAAA+C,WAAA,CAAA5D,SAAA,CACEN,cAACmE,IAAK,CAACC,OAAO,YACdpE,cAAA,QAAAM,SAAM,gBAIR2D,EAAa,IAAMA,EAAa,EAEhC9C,eAAA+C,WAAA,CAAA5D,SAAA,CACEN,cAACmE,IAAK,CAACC,OAAO,YACdpE,cAAA,QAAAM,SAAM,qBAIO,IAAf2D,EAEA9C,eAAA+C,WAAA,CAAA5D,SAAA,CACEN,cAACmE,IAAK,CAACC,OAAO,UACdpE,cAAA,QAAAM,SAAM,oBAIL,QAzBe2D,KA0FjB,EACDjB,OAAQA,CAACC,EAAGC,IAAMC,IAAMC,gBAAgBH,EAAGC,EAAG,UAEhD,CACER,MAAO,GACPC,UAAW,UACXC,OAASC,GAEL7C,cAAA,OAAKG,UAAU,aAAYG,SACzBN,cAAA,OAAKG,UAAU,oBAAmBG,SAChCN,cAACqE,IAAgB,UAQvBC,EAAe,CACnBC,SAAUA,CAACC,EAAKC,KACdnC,EAAgBmC,GAChBjC,EAAmBgC,EAAI,GAsB3B,OACErD,eAACuD,IAAI,CAAApE,SAAA,CACHa,eAAC4C,IAAI,CAACC,WAAW,SAASW,eAAe,UAAUC,YAAY,EAAMtE,SAAA,CACnEa,eAAC4C,IAAI,CAAC5D,UAAU,OAAOyE,YAAY,EAAMtE,SAAA,CACvCN,cAAA,OAAKG,UAAU,eAAcG,SAC3BN,cAAC6E,IAAK,CACJC,YAAY,SACZlB,OAAQ5D,cAAC+E,IAAc,IACvBR,SAAWS,GA1BLA,KAChB,MAAMxB,EAAQwB,EAAEC,cAAczB,MACxB0B,EAAcF,EAAEC,cAAczB,MAAQvB,EAAOG,EAC7C+C,EAAOhC,IAAMiC,eAAeF,EAAa1B,GAC/CtB,EAAQiD,GACR3C,EAAmB,GAAG,EAqBK6C,CAASL,OAG9BhF,cAAA,OAAKG,UAAU,OAAMG,SACnBa,eAACS,IAAM,CACL0D,aAAa,MACbnF,UAAU,QACVoF,MAAO,CAAEC,SAAU,KACnBjB,SA1BgBf,IAC1B,GAAc,QAAVA,EAAiB,CACnB,MAAMgB,EAAM,WACNW,EAAOhC,IAAMsC,YAAYrD,EAAkBoC,EAAKhB,GACtDtB,EAAQiD,EACV,MACEjD,EAAQE,EACV,EAoBU0C,YAAY,WAAUxE,SAAA,CAEtBN,cAAC2B,EAAM,CAAC6B,MAAM,MAAKlD,SAAC,QACnBuB,EAAW6D,KAAKC,GACf3F,cAAC2B,EAAM,CAAW6B,MAAOmC,EAAIrF,SAC1BqF,GADUA,aAOrB3F,cAAA,OAAAM,SACEN,cAAC4F,IAAM,CACLxE,QA/HSyE,KACjB9D,EAAQ+D,KAAK,kCAAkC,EA+HvCzF,KAAK,UACLS,KAAMd,cAACqB,EAAkB,IACzB0E,OAAK,EAAAzF,SACN,qBAKLN,cAAA,OAAKG,UAAU,mBAAkBG,SAC/BN,cAACgG,IAAK,CACJC,QAASxD,EACTyD,WAAYjE,EACZkE,OAAO,KACP7B,aAAYpE,YAAA,CACVqC,gBAAiBA,EACjBlC,KAAM,WACN+F,yBAAyB,GACtB9B,SAIJ,ECnMI+B,MAJIA,IACVrG,cAAA,OAAAM,SAAK,eCGCgG,MAJKA,IACXtG,cAAA,OAAAM,SAAK,gBCGCiG,MAJDA,IACLvG,cAAA,OAAAM,SAAK,UCiBCkG,UAZCC,IAAgB,IAAf,MAAEC,GAAOD,EACxB,OACEtF,eAACwF,IAAM,CAAArG,SAAA,CACLN,cAAC4G,IAAQ,CAACC,OAAK,EAACC,KAAI,GAAA1G,OAAKsG,EAAMK,KAAOC,GAAE,GAAA5G,OAAKsG,EAAMK,IAAG,eACtD/G,cAACiH,IAAK,CAACC,KAAI,GAAA9G,OAAKsG,EAAMK,IAAG,aAAaI,UAAWrF,IACjD9B,cAACiH,IAAK,CAACC,KAAI,GAAA9G,OAAKsG,EAAMK,IAAG,eAAeI,UAAWd,IACnDrG,cAACiH,IAAK,CAACC,KAAI,GAAA9G,OAAKsG,EAAMK,IAAG,gBAAgBI,UAAWb,IACpDtG,cAACiH,IAAK,CAACC,KAAI,GAAA9G,OAAKsG,EAAMK,IAAG,UAAUI,UAAWZ,MACvC,C","file":"static/js/20.6da487e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(PlusCircleOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'PlusCircleOutlined';\n}\nexport default RefIcon;","import React, { useState } from \"react\";\r\nimport { Card, Table, Select, Input, Button, Badge } from \"antd\";\r\nimport ProductsListData from \"assets/data/product-list.data.json\";\r\nimport {\r\n  SearchOutlined,\r\n  PlusCircleOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport utils from \"utils\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst getStockStatus = (stockCount) => {\r\n  if (stockCount >= 10) {\r\n    return (\r\n      <>\r\n        <Badge status=\"success\" />\r\n        <span>In Stock</span>\r\n      </>\r\n    );\r\n  }\r\n  if (stockCount < 10 && stockCount > 0) {\r\n    return (\r\n      <>\r\n        <Badge status=\"warning\" />\r\n        <span>Limited Stock</span>\r\n      </>\r\n    );\r\n  }\r\n  if (stockCount === 0) {\r\n    return (\r\n      <>\r\n        <Badge status=\"error\" />\r\n        <span>Out of Stock</span>\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst categories = [\"Cloths\", \"Bags\", \"Shoes\", \"Watches\", \"Devices\"];\r\n\r\nconst Products = () => {\r\n  let history = useHistory();\r\n  const [list, setList] = useState(ProductsListData);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n  const addProduct = () => {\r\n    history.push(`/app/apps/ecommerce/add-product`);\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Product\",\r\n      dataIndex: \"name\",\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">\r\n          <AvatarStatus\r\n            size={60}\r\n            type=\"square\"\r\n            src={record.image}\r\n            name={record.name}\r\n          />\r\n        </div>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"name\"),\r\n    },\r\n    {\r\n      title: \"Category\",\r\n      dataIndex: \"category\",\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"category\"),\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"price\",\r\n      render: (price) => (\r\n        <div>\r\n          <NumberFormat\r\n            displayType={\"text\"}\r\n            value={(Math.round(price * 100) / 100).toFixed(2)}\r\n            prefix={\"$\"}\r\n            thousandSeparator={true}\r\n          />\r\n        </div>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"price\"),\r\n    },\r\n    {\r\n      title: \"Stock\",\r\n      dataIndex: \"stock\",\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"stock\"),\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"stock\",\r\n      render: (stock) => (\r\n        <Flex alignItems=\"center\">{getStockStatus(stock)}</Flex>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"stock\"),\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"actions\",\r\n      render: (_) => {\r\n        return (\r\n          <div className=\"text-right\">\r\n            <div className=\"ellipsis-dropdown\">\r\n              <EllipsisOutlined />\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rowSelection = {\r\n    onChange: (key, rows) => {\r\n      setSelectedRows(rows);\r\n      setSelectedRowKeys(key);\r\n    },\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    const value = e.currentTarget.value;\r\n    const searchArray = e.currentTarget.value ? list : ProductsListData;\r\n    const data = utils.wildCardSearch(searchArray, value);\r\n    setList(data);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  const handleShowCategory = (value) => {\r\n    if (value !== \"All\") {\r\n      const key = \"category\";\r\n      const data = utils.filterArray(ProductsListData, key, value);\r\n      setList(data);\r\n    } else {\r\n      setList(ProductsListData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n        <Flex className=\"mb-1\" mobileFlex={false}>\r\n          <div className=\"mr-md-3 mb-3\">\r\n            <Input\r\n              placeholder=\"Search\"\r\n              prefix={<SearchOutlined />}\r\n              onChange={(e) => onSearch(e)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Select\r\n              defaultValue=\"All\"\r\n              className=\"w-100\"\r\n              style={{ minWidth: 180 }}\r\n              onChange={handleShowCategory}\r\n              placeholder=\"Category\"\r\n            >\r\n              <Option value=\"All\">All</Option>\r\n              {categories.map((elm) => (\r\n                <Option key={elm} value={elm}>\r\n                  {elm}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </Flex>\r\n        <div>\r\n          <Button\r\n            onClick={addProduct}\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined />}\r\n            block\r\n          >\r\n            Add product\r\n          </Button>\r\n        </div>\r\n      </Flex>\r\n      <div className=\"table-responsive\">\r\n        <Table\r\n          columns={tableColumns}\r\n          dataSource={list}\r\n          rowKey=\"id\"\r\n          rowSelection={{\r\n            selectedRowKeys: selectedRowKeys,\r\n            type: \"checkbox\",\r\n            preserveSelectedRowKeys: false,\r\n            ...rowSelection,\r\n          }}\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\n\r\nconst Categories = () => {\r\n  return <div>Categories</div>;\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\n\r\nconst Collections = () => {\r\n  return <div>Collections</div>;\r\n};\r\n\r\nexport default Collections;\r\n","import React from \"react\";\r\n\r\nconst Combo = () => {\r\n  return <div>Combo</div>;\r\n};\r\n\r\nexport default Combo;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Products from \"./products\";\r\nimport Categories from \"./categories\";\r\nimport Collections from \"./collections\";\r\nimport Combo from \"./combo\";\r\n\r\nconst Catalog = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}`} to={`${match.url}/products`} />\r\n      <Route path={`${match.url}/products`} component={Products} />\r\n      <Route path={`${match.url}/categories`} component={Categories} />\r\n      <Route path={`${match.url}/Collections`} component={Collections} />\r\n      <Route path={`${match.url}/combo`} component={Combo} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n"],"sourceRoot":""}