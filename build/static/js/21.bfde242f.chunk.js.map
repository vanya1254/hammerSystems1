{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/main/orders/index.js","constants/DateConstant.js"],"names":["renderAvatar","props","_jsx","Avatar","_objectSpread","className","concat","type","children","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","Option","Select","paymentStatusList","Orders","list","setList","useState","OrderListData","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","tableColumns","title","dataIndex","render","_","record","image","sorter","a","b","utils","antdTableSorter","moment","unix","date","format","_Fragment","Tag","color","status","orderStatus","Badge","paymentStatus","NumberFormat","displayType","value","Math","round","amount","toFixed","prefix","thousandSeparator","EllipsisOutlined","rowSelection","onChange","key","rows","Card","Flex","alignItems","justifyContent","mobileFlex","Input","placeholder","SearchOutlined","e","currentTarget","searchArray","data","wildCardSearch","onSearch","defaultValue","style","minWidth","filterArray","map","elm","Button","FileExcelOutlined","block","Table","columns","dataSource","rowKey","preserveSelectedRowKeys"],"mappings":"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","file":"static/js/21.bfde242f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport { Card, Table, Select, Input, Button, Badge, Tag } from \"antd\";\r\nimport OrderListData from \"assets/data/order-list.data.json\";\r\nimport {\r\n  FileExcelOutlined,\r\n  SearchOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { DATE_FORMAT_DD_MM_YYYY } from \"constants/DateConstant\";\r\nimport utils from \"utils\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst getPaymentStatus = (status) => {\r\n  if (status === \"Paid\") {\r\n    return \"success\";\r\n  }\r\n  if (status === \"Pending\") {\r\n    return \"warning\";\r\n  }\r\n  if (status === \"Expired\") {\r\n    return \"error\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst getShippingStatus = (status) => {\r\n  if (status === \"Ready\") {\r\n    return \"blue\";\r\n  }\r\n  if (status === \"Shipped\") {\r\n    return \"cyan\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst paymentStatusList = [\"Paid\", \"Pending\", \"Expired\"];\r\n\r\nconst Orders = () => {\r\n  const [list, setList] = useState(OrderListData);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n  const handleShowStatus = (value) => {\r\n    if (value !== \"All\") {\r\n      const key = \"paymentStatus\";\r\n      const data = utils.filterArray(OrderListData, key, value);\r\n      setList(data);\r\n    } else {\r\n      setList(OrderListData);\r\n    }\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Product\",\r\n      dataIndex: \"name\",\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">\r\n          <AvatarStatus size={30} src={record.image} name={record.name} />\r\n        </div>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"name\"),\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      render: (_, record) => (\r\n        <span>{moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"date\"),\r\n    },\r\n    {\r\n      title: \"Order status\",\r\n      dataIndex: \"orderStatus\",\r\n      render: (_, record) => (\r\n        <>\r\n          <Tag color={getShippingStatus(record.orderStatus)}>\r\n            {record.orderStatus}\r\n          </Tag>\r\n        </>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"orderStatus\"),\r\n    },\r\n    {\r\n      title: \"Payment status\",\r\n      dataIndex: \"paymentStatus\",\r\n      render: (_, record) => (\r\n        <>\r\n          <Badge status={getPaymentStatus(record.paymentStatus)} />\r\n          <span>{record.paymentStatus}</span>\r\n        </>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"paymentStatus\"),\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      dataIndex: \"amount\",\r\n      render: (_, record) => (\r\n        <span className=\"font-weight-semibold\">\r\n          <NumberFormat\r\n            displayType={\"text\"}\r\n            value={(Math.round(record.amount * 100) / 100).toFixed(2)}\r\n            prefix={\"$\"}\r\n            thousandSeparator={true}\r\n          />\r\n        </span>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"amount\"),\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"actions\",\r\n      render: (_) => {\r\n        return (\r\n          <div className=\"text-right\">\r\n            <div className=\"ellipsis-dropdown\">\r\n              <EllipsisOutlined />\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rowSelection = {\r\n    onChange: (key, rows) => {\r\n      setSelectedRows(rows);\r\n      setSelectedRowKeys(key);\r\n    },\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    const value = e.currentTarget.value;\r\n    const searchArray = e.currentTarget.value ? list : OrderListData;\r\n    const data = utils.wildCardSearch(searchArray, value);\r\n    setList(data);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n        <Flex className=\"mb-1\" mobileFlex={false}>\r\n          <div className=\"mr-md-3 mb-3\">\r\n            <Input\r\n              placeholder=\"Search\"\r\n              prefix={<SearchOutlined />}\r\n              onChange={(e) => onSearch(e)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Select\r\n              defaultValue=\"All\"\r\n              className=\"w-100\"\r\n              style={{ minWidth: 180 }}\r\n              onChange={handleShowStatus}\r\n              placeholder=\"Status\"\r\n            >\r\n              <Option value=\"All\">All payment </Option>\r\n              {paymentStatusList.map((elm) => (\r\n                <Option key={elm} value={elm}>\r\n                  {elm}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </Flex>\r\n        <div>\r\n          <Button type=\"primary\" icon={<FileExcelOutlined />} block>\r\n            Export All\r\n          </Button>\r\n        </div>\r\n      </Flex>\r\n      <div className=\"table-responsive\">\r\n        <Table\r\n          columns={tableColumns}\r\n          dataSource={list}\r\n          rowKey=\"id\"\r\n          rowSelection={{\r\n            selectedRowKeys: selectedRowKeys,\r\n            type: \"checkbox\",\r\n            preserveSelectedRowKeys: false,\r\n            ...rowSelection,\r\n          }}\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","export const DATE_FORMAT_YYYYMMdd = \"YYYYMMdd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd = \"YYYY-MM-dd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_Combined = \"YYYYMMddHHmm\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_HH_mm = \"YYYY-MM-dd HH:mm\";\r\nexport const DATE_FORMAT_DD_MM_YYYY = \"DD-MM-YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_DOT = \"DD.MM.YYYY\";\r\nexport const DATE_FORMAT_mm_dd_YYYY_WITH_SLASH = \"MM/dd/YYYY\";\r\nexport const DATE_FORMAT_m_d_YYYY_WITH_SLASH = \"M/d/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH = \"DD/MM/YYYY\";\r\nexport const DATE_FORMAT_dd_MMM = \"ddMMM\";\r\nexport const DATE_FORMAT_dd_MM_yy = \"ddMMyy\";\r\nexport const DATE_FORMAT_dd_MMM_YYYY = \"ddMMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_COMBINED = \"DDMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss = \"YYYY-MM-dd'T'HH:mm:ss\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss_sz = \"YYYY-MM-dd'T'HH:mm:ss.SSS\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm = \"dd-MM-YYYY HH:mm\";\r\nexport const DATE_FORMAT_HH_mm = \"HH:mm\";\r\nexport const DATE_FORMAT_YYYY_MM_DDTHH_mm_ssZ = \"YYYY-MM-DD'T'HH:mm:ssZ\"; "],"sourceRoot":""}